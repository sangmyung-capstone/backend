buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'capstone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains:annotations:20.1.0'
    compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok:1.18.12' // 테스트 의존성 추가
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12' // 테스트 의존성 추가
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	// gson 관련. json 파싱 google 라이브러리
	implementation'com.google.code.gson:gson:2.8.7'

	// jwt 위한 라이브러리 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
	implementation 'com.google.code.gson:gson:2.8.6'

	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}" // querydsl 라이브러리
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}" //  Querydsl 관련 코드 생성 기능 제공

//	// https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter
	implementation("io.springfox:springfox-boot-starter:3.0.0")
	implementation("io.springfox:springfox-swagger-ui:3.0.0")

	// 웹 크롤링 - 셀레니움
	implementation 'org.seleniumhq.selenium:selenium-java:4.0.0'
	// @Valid 를 위한 의존관계 추가
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// 파이어 베이스 리얼타임 데이터 베이스
	implementation 'com.google.firebase:firebase-admin:9.1.1'
}

tasks.named('test') {
	useJUnitPlatform()
}


//querydsl 추가 시작 (위에 plugin 추가 부분과 맞물림)
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets { // IDE의 소스 폴더에 자동으로 넣어준다.
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath // 컴파일이 될때 같이 수행
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl // Q파일을 생성해준다.
}
//querydsl 추가 끝